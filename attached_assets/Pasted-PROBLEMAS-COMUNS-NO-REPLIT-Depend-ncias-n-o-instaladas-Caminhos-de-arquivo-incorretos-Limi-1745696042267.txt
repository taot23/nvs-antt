PROBLEMAS COMUNS NO REPLIT:

Depend√™ncias n√£o instaladas

Caminhos de arquivo incorretos

Limita√ß√µes de armazenamento tempor√°rio

Necessidade de gera√ß√£o in-browser

SUGEST√ÉO DE PROMPT PARA SEU RELAT√ìRIO:

python
# Instale primeiro (no console do Replit):
# pip install pandas xlsxwriter reportlab jinja2

import pandas as pd
from reportlab.pdfgen import canvas
from reportlab.lib.pagesizes import A4
from io import BytesIO
import jinja2

# Dados de exemplo (substitua pelos seus)
dados = {
    "Data": ["2023-01-01", "2023-01-02", "2023-01-03"],
    "Descri√ß√£o": ["Sal√°rio", "Aluguel", "Supermercado"],
    "Valor": [5000.00, -1200.00, -350.50],
    "Categoria": ["Receita", "Despesa", "Despesa"]
}

df = pd.DataFrame(dados)

# Gera√ß√£o do Excel
def gerar_excel():
    writer = pd.ExcelWriter('relatorio_financeiro.xlsx', engine='xlsxwriter')
    df.to_excel(writer, index=False, sheet_name='Transa√ß√µes')
    workbook = writer.book
    worksheet = writer.sheets['Transa√ß√µes']
    
    # Formata√ß√£o
    money_format = workbook.add_format({'num_format': 'R$ #,##0.00'})
    worksheet.set_column('C:C', 15, money_format)
    
    writer.close()
    return open('relatorio_financeiro.xlsx', 'rb')

# Gera√ß√£o do PDF
def gerar_pdf():
    buffer = BytesIO()
    c = canvas.Canvas(buffer, pagesize=A4)
    
    # Cabe√ßalho
    c.setFont("Helvetica-Bold", 16)
    c.drawString(72, 800, "Relat√≥rio Financeiro")
    
    # Tabela
    y_position = 750
    col_widths = [100, 200, 100, 100]
    
    # Cabe√ßalhos da tabela
    headers = df.columns
    for i, header in enumerate(headers):
        c.setFont("Helvetica-Bold", 12)
        c.drawString(72 + sum(col_widths[:i]), y_position, header)
    
    # Linhas
    c.setFont("Helvetica", 10)
    for index, row in df.iterrows():
        y_position -= 20
        if y_position < 50:
            c.showPage()
            y_position = 750
        for i, (col, value) in enumerate(row.items()):
            c.drawString(72 + sum(col_widths[:i]), y_position, str(value))
    
    c.save()
    buffer.seek(0)
    return buffer

# Para usar no Replit
try:
    # Gerar arquivos
    excel_file = gerar_excel()
    pdf_buffer = gerar_pdf()

    # Salvar arquivos
    with open('relatorio_financeiro.xlsx', 'wb') as f:
        f.write(excel_file.read())
    
    with open('relatorio_financeiro.pdf', 'wb') as f:
        f.write(pdf_buffer.getvalue())

    print("‚úÖ Arquivos gerados com sucesso!")
    print("üìÇ Verifique na aba de arquivos √† esquerda:")
    print("- relatorio_financeiro.xlsx")
    print("- relatorio_financeiro.pdf")

except Exception as e:
    print(f"‚ùå Erro: {str(e)}")
    print("‚ö†Ô∏è Verifique se todas as depend√™ncias est√£o instaladas")
PASSO A PASSO PARA USAR:

Clique no √≠cone de pacote (Packages) na barra lateral

Instale estas depend√™ncias:

pandas

xlsxwriter

reportlab

jinja2

Substitua a se√ß√£o dados por suas informa√ß√µes reais

Execute o c√≥digo

Verifique a aba de arquivos √† esquerda para baixar os relat√≥rios